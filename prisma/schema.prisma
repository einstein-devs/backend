generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum CargoPosicao {
  ALUNO
  COORDENADOR
  DIRETOR
}

model usuario {
  id     Int    @id @default(autoincrement())
  codigo String @unique @db.VarChar(30)
  nome   String @db.VarChar(70)
  email  String @db.VarChar(120)
  senha  String

  cargo   cargo  @relation(fields: [cargoId], references: [id])
  cargoId String

  curso   curso  @relation(fields: [cursoId], references: [id])
  cursoId String

  cursoCoordenado   curso?  @relation(name: "coordenador")
  cursoCoordenadoId String?

  certificado certificado[]
  presenca    presenca[]
  centro      centro[]

  dataCriacao     DateTime  @default(now())
  dataAtualizacao DateTime  @updatedAt()
  dataExclusao    DateTime?
}

model curso {
  id     String  @id @default(uuid()) @db.Uuid()
  nome   String
  ementa String?

  centro   centro @relation(fields: [centroId], references: [id])
  centroId String

  usuario usuario[] @relation()

  coordenador   usuario @relation(name: "coordenador", fields: [coordenadorId], references: [id])
  coordenadorId Int     @unique

  dataCriacao     DateTime @default(now())
  dataAtualizacao DateTime @updatedAt()
}

model centro {
  id   String @id @default(uuid()) @db.Uuid()
  nome String @unique @db.VarChar(50)

  curso curso[]

  diretor   usuario @relation(fields: [diretorId], references: [id])
  diretorId Int

  dataCriacao     DateTime @default(now())
  dataAtualizacao DateTime @updatedAt()
}

model cargo {
  id          String       @id @default(uuid()) @db.Uuid()
  posicao     CargoPosicao @unique
  dataCriacao DateTime     @default(now())

  usuario usuario[]
}

model evento {
  id              Int      @id @default(autoincrement())
  titulo          String   @db.VarChar(40)
  descricao       String?  @db.VarChar(255)
  codigo          String?  @db.VarChar(12)
  urlImagem       String?
  dataHoraInicio  DateTime
  dataHoraTermino DateTime

  certificado certificado[]
  presenca    presenca[]

  dataCriacao     DateTime @default(now())
  dataAtualizacao DateTime @updatedAt
}

model local {
  id              Int      @id @default(autoincrement())
  titulo          String   @db.VarChar(50)
  descricao       String?  @db.VarChar(255)
  dataCriacao     DateTime @default(now())
  dataAtualizacao DateTime @updatedAt
}

model certificado {
  id String @id @default(uuid()) @db.Uuid()

  usuario   usuario @relation(fields: [usuarioId], references: [id])
  evento    evento  @relation(fields: [eventoId], references: [id])
  usuarioId Int
  eventoId  Int

  dataEmissao DateTime @default(now())
}

model presenca {
  id String @id @default(uuid()) @db.Uuid()

  usuario   usuario @relation(fields: [usuarioId], references: [id])
  evento    evento  @relation(fields: [eventoId], references: [id])
  usuarioId Int     @unique
  eventoId  Int     @unique

  dataInscricao DateTime  @default(now())
  dataPresenca  DateTime?
}
