generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum CargoPosicao {
  ALUNO
  COORDENADOR
  DIRETOR
}

model usuario {
  id              Int       @id @default(autoincrement())
  codigo          String    @unique @db.VarChar(30)
  nome            String    @db.VarChar(30)
  email           String    @db.VarChar(120)
  senha           String    @db.VarChar(90)
  dataCriacao     DateTime  @default(now())
  dataAtualizacao DateTime  @updatedAt()
  dataExclusao    DateTime?

  cargo   cargo  @relation(fields: [cargoId], references: [id])
  cargoId String

  certificado   certificado[]
  presenca      presenca[]
  usuario_curso usuario_curso[]
}

model curso {
  id              String          @id @default(uuid())
  nome            String
  ementa          String?
  dataCriacao     DateTime        @default(now())
  dataAtualizacao DateTime        @updatedAt()
  usuario_curso   usuario_curso[]
}

model usuario_curso {
  id Int @id @default(autoincrement())

  usuario   usuario @relation(fields: [usuarioId], references: [id])
  usuarioId Int
  curso     curso   @relation(fields: [cursoId], references: [id])
  cursoId   String

  dataCriacao DateTime @default(now())
}

model cargo {
  id          String       @id @default(uuid())
  posicao     CargoPosicao @unique
  dataCriacao DateTime     @default(now())

  usuario usuario[]
}

model evento {
  id              Int           @id @default(autoincrement())
  titulo          String        @db.VarChar(40)
  descricao       String?       @db.VarChar(255)
  codigo          String?       @db.VarChar(12)
  dataHoraInicio  DateTime
  dataHoraTermino DateTime
  dataCriacao     DateTime      @default(now())
  dataAtualizacao DateTime      @updatedAt
  certificado     certificado[]
  presenca        presenca[]
}

model local {
  id              Int      @id @default(autoincrement())
  titulo          String   @db.VarChar(50)
  descricao       String?  @db.VarChar(255)
  urlImagem       String?
  dataCriacao     DateTime @default(now())
  dataAtualizacao DateTime @updatedAt
}

model certificado {
  id String @id @default(uuid())

  usuario   usuario @relation(fields: [usuarioId], references: [id])
  evento    evento  @relation(fields: [eventoId], references: [id])
  usuarioId Int
  eventoId  Int

  dataEmissao DateTime @default(now())
}

model presenca {
  id String @id @default(uuid())

  usuario   usuario @relation(fields: [usuarioId], references: [id])
  evento    evento  @relation(fields: [eventoId], references: [id])
  usuarioId Int     @unique
  eventoId  Int     @unique

  dataInscricao DateTime  @default(now())
  dataPresenca  DateTime?
}
