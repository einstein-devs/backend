generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum CargoPosicao {
  ALUNO
  COORDENADOR
  DIRETOR
}

model usuario {
  id     String @id @default(uuid()) @db.Uuid()
  codigo String @unique @db.VarChar(30)
  nome   String @db.VarChar(70)
  email  String @db.VarChar(120)
  senha  String

  cargo   cargo  @relation(fields: [cargoId], references: [id])
  cargoId String @map("id_cargo") @db.Uuid()

  curso   curso?  @relation(fields: [cursoId], references: [id])
  cursoId String? @map("id_curso") @db.Uuid()

  cursoCoordenado   curso?  @relation(name: "coordenador")
  cursoCoordenadoId String? @map("id_curso_coordenado") @db.Uuid()

  certificado certificado[]
  presenca    presenca[]
  centro      centro[]
  evento      evento[]

  dataCriacao     DateTime  @default(now()) @map("data_criacao") @db.Timestamptz(3)
  dataAtualizacao DateTime  @updatedAt() @map("data_atualizacao") @db.Timestamptz(3)
  dataExclusao    DateTime? @map("data_exclusao") @db.Timestamptz(3)
}

model curso {
  id     String  @id @default(uuid()) @db.Uuid()
  nome   String  @db.VarChar(70)
  ementa String? @db.VarChar(100)

  usuario usuario[] @relation()

  centro        centro   @relation(fields: [centroId], references: [id])
  centroId      String   @map("id_centro") @db.Uuid()
  coordenador   usuario? @relation(name: "coordenador", fields: [coordenadorId], references: [id])
  coordenadorId String?  @unique @map("id_coordenador") @db.Uuid()

  dataCriacao     DateTime @default(now()) @map("data_criacao") @db.Timestamptz(3)
  dataAtualizacao DateTime @updatedAt() @map("data_atualizacao") @db.Timestamptz(3)
}

model centro {
  id   String @id @default(uuid()) @db.Uuid()
  nome String @unique @db.VarChar(50)

  curso curso[]

  diretor   usuario @relation(fields: [diretorId], references: [id])
  diretorId String  @map("id_diretor") @db.Uuid()

  dataCriacao     DateTime @default(now()) @map("data_criacao") @db.Timestamptz(3)
  dataAtualizacao DateTime @updatedAt() @map("data_atualizacao") @db.Timestamptz(3)
}

model cargo {
  id String @id @default(uuid()) @db.Uuid()

  posicao CargoPosicao @unique
  usuario usuario[]

  dataCriacao DateTime @default(now()) @map("data_criacao") @db.Timestamptz(3)
}

model evento {
  id String @id @default(uuid()) @db.Uuid()

  titulo          String   @db.VarChar(40)
  descricao       String?  @db.VarChar(255)
  codigo          String?  @db.VarChar(12)
  urlImagem       String?  @map("url_imagem")
  dataHoraInicio  DateTime @map("data_hora_inicio") @db.Timestamptz(3)
  dataHoraTermino DateTime @map("data_hora_termino") @db.Timestamptz(3)

  certificado certificado[]
  presenca    presenca[]

  local   local  @relation(fields: [localId], references: [id])
  localId String @map("id_local") @db.Uuid()

  usuario   usuario @relation(fields: [usuarioId], references: [id])
  usuarioId String  @map("id_usuario") @db.Uuid()

  dataCriacao     DateTime @default(now()) @map("data_criacao") @db.Timestamptz(3)
  dataAtualizacao DateTime @updatedAt() @map("data_atualizacao") @db.Timestamptz(3)
}

model local {
  id String @id @default(uuid()) @db.Uuid()

  titulo    String   @db.VarChar(50)
  descricao String?  @db.VarChar(255)
  evento    evento[]

  dataCriacao     DateTime @default(now()) @map("data_criacao") @db.Timestamptz(3)
  dataAtualizacao DateTime @updatedAt() @map("data_atualizacao") @db.Timestamptz(3)
}

model certificado {
  id String @id @default(uuid()) @db.Uuid()

  usuario   usuario @relation(fields: [usuarioId], references: [id])
  evento    evento  @relation(fields: [eventoId], references: [id])
  usuarioId String  @map("id_usuario") @db.Uuid()
  eventoId  String  @map("id_evento") @db.Uuid()

  dataEmissao DateTime @default(now()) @map("data_emissao") @db.Timestamptz(3)
}

model presenca {
  id String @id @default(uuid()) @db.Uuid()

  usuario   usuario @relation(fields: [usuarioId], references: [id])
  evento    evento  @relation(fields: [eventoId], references: [id])
  usuarioId String  @map("id_usuario") @db.Uuid()
  eventoId  String  @map("id_evento") @db.Uuid()

  dataInscricao DateTime  @default(now()) @map("data_inscricao") @db.Timestamptz(3)
  dataPresenca  DateTime? @map("data_presenca") @db.Timestamptz(3)
}
